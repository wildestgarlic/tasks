"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""
N = 100


def solution1() -> int:
    return sum((number for number in (fib(n) for n in range(N)) if number < 4000000 and number % 2 == 0))


def fib(n) -> int:
    return (4 << n*(3+n)) // ((4 << 2*n) - (2 << n) - 1) & ((2 << n) - 1)


if __name__ == "__main__":
    print(solution1())

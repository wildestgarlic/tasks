"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""
import time
from functools import lru_cache

from utils.timer import duration

N = 4000000


def solution4() -> int:
    response = 0

    f = 0
    n = 0
    while f < N:
        f = fib(n)
        if f % 2 == 0:
            response += f
        n += 1

    return response


@lru_cache(maxsize=None)
def fib(n) -> int:
    return n if n < 2 else fib(n-1) + fib(n-2)


if __name__ == "__main__":
    start = time.monotonic()
    print(solution4(), duration(start))

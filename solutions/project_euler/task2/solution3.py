"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""
import time

from utils.timer import duration

N = 100


def solution3() -> int:
    f = fib()
    return sum({number for number in {f.__next__() for _ in range(N)} if number < 4000000 and number % 2 == 0})


def fib():
    a, b = 0, 1
    while True:
        yield a
        a, b = b, a + b


if __name__ == "__main__":
    start = time.monotonic()
    print(solution3(), duration(start))
